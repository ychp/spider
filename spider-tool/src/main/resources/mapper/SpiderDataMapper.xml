<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="SpiderData">
    <resultMap id="SpiderDataMap" type="SpiderData" >
        <id column="id" property="id"/>
        <result column="user_id" property="userId"/>
        <result column="parser_id" property="parserId"/>
        <result column="task_id" property="taskId"/>
        <result column="content" property="content"/>
        <result column="url" property="url"/>
        <result column="source" property="source"/>
        <result column="type" property="type"/>
        <result column="level" property="level"/>
        <result column="path" property="path"/>
        <result column="unique_code" property="uniqueCode"/>
        <result column="status" property="status"/>
        <result column="created_at" property="createdAt"/>
        <result column="updated_at" property="updatedAt"/>
    </resultMap>

    <sql id="tableName">`spider_data`</sql>

    <sql id="columns">
        `user_id`,`parser_id`,`task_id`,`content`,`url`,`source`,`type`,`level`,`path`,`unique_code`,`status`,`created_at`,`updated_at`
    </sql>

    <insert id="create" parameterType="SpiderData" keyProperty="id" useGeneratedKeys="true">
        INSERT INTO <include refid="tableName"/>
        (<include refid="columns"/>)
        VALUES (#{userId},#{parserId},#{taskId},#{content},#{url},#{source},#{type},#{level},#{path},#{uniqueCode},#{status},now(),now())
    </insert>

    <insert id="creates" parameterType="list" useGeneratedKeys="true">
        INSERT INTO <include refid="tableName"/>(<include refid="columns"/>) VALUES
        <foreach collection="list" item="spiderData" separator=",">
          (#{spiderDate.userId},#{spiderData.parserId},#{spiderData.taskId},#{spiderData.content},#{spiderData.url},#{spiderData.source},#{spiderData.type},#{spiderData.level},#{spiderData.path},#{spiderData.uniqueCode},#{spiderData.status},now(),now())
        </foreach>
    </insert>

    <update id="update" parameterType="SpiderData">
        update <include refid="tableName"/>
        <set>
            `path` = #{path},
            `status` = #{status},
            `updated_at` = #{updatedAt}
        </set>
        <where>
            `id` = #{id}
        </where>
    </update>

    <sql id="criteria">
        WHERE 1=1
            <if test="id != null">AND `id`=#{id}</if>
            <if test="parserId!=null">AND `parser_id`=#{parserId}</if>
            <if test="taskId!=null">AND `task_id`=#{taskId}</if>
            <if test="userId!=null">AND `user_id`=#{userId}</if>
            <if test="content!=null">AND `content` like #{content}</if>
            <if test="url!=null">AND `url`LIKE CONCAT(#{url}, '%')</if>
            <if test="source!=null">AND `source`=#{source}</if>
            <if test="type!=null">AND `type`=#{type}</if>
            <if test="status!=null">AND `status`=#{status}</if>
    </sql>

    <select id="findById" parameterType="long" resultMap="SpiderDataMap">
        SELECT `id`, <include refid="columns"/> FROM <include refid="tableName"/> WHERE id = #{id}
    </select>

    <select id="findByIds" parameterType="list" resultMap="SpiderDataMap">
        SELECT `id`, <include refid="columns"/> FROM <include refid="tableName"/> WHERE id in
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>

    <delete id="delete" >
        DELETE FROM <include refid="tableName"/> WHERE id=#{id}
    </delete>

    <delete id="deleteBy" >
        DELETE FROM <include refid="tableName"/> WHERE `task_id`=#{taskId}
    </delete>

    <select id="count" parameterType="map" resultType="long">
        SELECT count(*) FROM <include refid="tableName"/>
        <include refid="criteria"/>
    </select>

    <select id="paging" parameterType="map" resultMap="SpiderDataMap">
        SELECT `id`, <include refid="columns"/> FROM <include refid="tableName"/>
        <include refid="criteria"/>
        LIMIT #{offset},#{limit}
    </select>

    <update id="updateStatus" parameterType="map" >
        UPDATE <include refid="tableName"/>
        SET `status`=#{status},`updated_at`= now()
        WHERE id = #{id}
    </update>

</mapper>